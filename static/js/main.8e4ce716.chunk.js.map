{"version":3,"sources":["assets/audio/numbers.ogg","components/TambolaBoard/TambolaBoardCoin/TambolaBoardCoin.js","components/TambolaBoard/TambolaBoardBox/TambolaBoardBox.js","components/TambolaBoard/TambolaBoard.js","components/UI/Button/Button.js","components/UI/CoinPublisher/CoinPublisher.js","containers/TambolaGameManager/TambolaGameManager.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","tambolaBoardCoin","props","react_default","a","createElement","className","children","tambolaBoardBox","active","TambolaBoardCoin_TambolaBoardCoin","value","tambolaBoard","numbers","Object","keys","map","key","TambolaBoardBox_TambolaBoardBox","button","disabled","btnType","join","onClick","clicked","coinPublisher","MAX_NUMBERS","GAME_INTERVAL","TIMES","TambolaGameManager","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setDefaultGameNumbers","currentNumber","state","maxNumbers","setState","gameStarted","gamePaused","gameEnded","gameTimer","gameHistory","coinPublishing","getRandomInActiveNumber","inActiveNumbers","filter","length","Math","floor","random","updateInActiveNumber","_ref","asyncToGenerator","regenerator_default","mark","_callee","inActiveNumber","startTime","endTime","numbersAudioTimeRangeUrl","wrap","_context","prev","next","concat","Number","toFixed","numbersAudioUrl","Audio","play","setTimeout","stop","_x","apply","arguments","checkGameEnded","endGameHandler","chooseRandomNumber","_callee2","randomNumber","_context2","beginGameHandler","_callee3","_context3","beginGameTimerHandler","pauseGameHandler","endGameTimerHandler","resumeGameHandler","_callee4","_context4","resetGameHandler","setInterval","undefined","clearInterval","getGamePositionButton","Button_Button","getGameControls","getCoinPublisher","CoinPublisher_CoinPublisher","TambolaBoard_TambolaBoard","target","href","Component","App","containers_TambolaGameManager_TambolaGameManager","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e4ce716.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/numbers.5e406958.ogg\";","import React from 'react';\r\n\r\nimport './TambolaBoardCoin.css';\r\n\r\nconst tambolaBoardCoin = (props) => (\r\n    <div className='TambolaBoardCoin'>\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default tambolaBoardCoin;\r\n","import React from 'react';\r\n\r\nimport './TambolaBoardBox.css';\r\nimport TambolaBoardCoin from '../TambolaBoardCoin/TambolaBoardCoin';\r\n\r\nconst tambolaBoardBox = (props) => (\r\n    <div className='TambolaBoardBox'>\r\n        {props.active\r\n            ? <TambolaBoardCoin>{props.value}</TambolaBoardCoin>\r\n            : <p>{props.value}</p>}\r\n    </div>\r\n);\r\n\r\nexport default tambolaBoardBox;\r\n","import React from 'react';\r\n\r\nimport './TambolaBoard.css';\r\nimport TambolaBoardBox from './TambolaBoardBox/TambolaBoardBox';\r\n\r\nconst tambolaBoard = (props) => (\r\n    <div className='TambolaBoard'>\r\n        {props.numbers\r\n            ? Object.keys(props.numbers).map(key =>\r\n                <TambolaBoardBox\r\n                    key={key}\r\n                    value={props.numbers[key].value}\r\n                    active={props.numbers[key].active} />\r\n            ) : null}\r\n    </div>\r\n);\r\n\r\nexport default tambolaBoard;\r\n","import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={['Button', props.btnType].join(' ')}\r\n        onClick={props.clicked}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default button;\r\n","import React from 'react';\r\n\r\nimport './CoinPublisher.css';\r\n\r\nconst coinPublisher = (props) => (\r\n    <div className='CoinPublisher'>\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default coinPublisher;\r\n","import React, { Component } from 'react';\r\n\r\nimport './TambolaGameManager.css';\r\nimport numbersAudioUrl from '../../assets/audio/numbers.ogg';\r\nimport TambolaBoard from '../../components/TambolaBoard/TambolaBoard';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport CoinPublisher from '../../components/UI/CoinPublisher/CoinPublisher';\r\n\r\nconst MAX_NUMBERS = 90;\r\nconst GAME_INTERVAL = 5000;\r\nconst TIMES = [1.35, 2.54, 3.75, 4.9, 6.05, 7.29, 8.43, 9.72, 11.09, 12.16, 13.37, 14.5, 15.74, 16.92, 18.1, 19.24, 20.4, 21.59, 22.86, 24.01, 25.32, 26.52, 27.84, 29.12, 30.45, 31.83, 33.2, 34.66, 36.05, 37.32, 38.74, 39.81, 41.06, 42.28, 43.49, 44.8, 46.17, 47.51, 48.79, 50.03, 51.39, 52.45, 53.8, 55.05, 56.34, 57.65, 59.09, 60.43, 61.78, 63.03, 64.45, 65.49, 66.79, 68.04, 69.34, 70.7, 72.12, 73.47, 74.84, 76.2, 77.66, 79.14, 80.55, 82.18, 83.59, 85.58, 86.97, 88.43, 89.85, 91.22, 92.73, 94.01, 95.43, 96.81, 98.25, 99.63, 101.14, 102.54, 104.08, 105.54, 107.11, 108.15, 109.48, 110.75, 112.11, 113.49, 114.91, 116.34, 117.7, 119.08, 120.35, 121.57, 122.98, 124.31, 125.73, 127.13, 128.49, 129.9, 131.38, 132.72, 134.16, 135.28, 136.66, 137.42, 138.45, 139.75, 141.02, 143.09, 144.19, 145.22, 146.44];\r\n\r\nclass TambolaGameManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            maxNumbers: props.maxNumbers && typeof props.maxNumbers === 'number'\r\n                ? props.maxNumbers\r\n                : MAX_NUMBERS\r\n        };\r\n    }\r\n\r\n    setDefaultGameNumbers = () => {\r\n        const numbers = {};\r\n        for (let currentNumber = 1; currentNumber <= this.state.maxNumbers; currentNumber += 1) {\r\n            numbers[currentNumber] = ({\r\n                value: currentNumber,\r\n                active: false,\r\n            });\r\n        }\r\n        this.setState({\r\n            gameStarted: false,\r\n            gamePaused: false,\r\n            gameEnded: false,\r\n            gameTimer: null,\r\n            currentNumber: null,\r\n            gameHistory: [],\r\n            coinPublishing: false,\r\n            numbers,\r\n        });\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.setDefaultGameNumbers();\r\n    }\r\n\r\n    getRandomInActiveNumber = () => {\r\n        const inActiveNumbers = Object.keys(this.state.numbers)\r\n            .filter(key => this.state.numbers[key].active === false);\r\n        if (inActiveNumbers.length) {\r\n            return inActiveNumbers[Math.floor(Math.random() * inActiveNumbers.length)];\r\n        }\r\n        return null;\r\n    };\r\n\r\n    updateInActiveNumber = async (inActiveNumber) => {\r\n        const { numbers } = this.state;\r\n        numbers[inActiveNumber].active = true;\r\n        let { gameHistory } = this.state;\r\n        if (this.state.currentNumber) {\r\n            gameHistory = [this.state.currentNumber].concat(gameHistory);\r\n        }\r\n        const currentNumber = Number(inActiveNumber);\r\n        const startTime = TIMES[currentNumber];\r\n        const endTime = (TIMES[currentNumber + 1] - 0.3).toFixed(2);\r\n        const numbersAudioTimeRangeUrl = `${numbersAudioUrl}#t=${startTime},${endTime}`;\r\n        await new Audio(numbersAudioTimeRangeUrl).play();\r\n        this.setState({\r\n            numbers,\r\n            currentNumber,\r\n            gameHistory,\r\n            coinPublishing: true\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({ coinPublishing: false });\r\n        }, 30 * Math.floor(GAME_INTERVAL / 100));\r\n    };\r\n\r\n    checkGameEnded = () => {\r\n        if (!this.getRandomInActiveNumber()) {\r\n            this.endGameHandler();\r\n        }\r\n    };\r\n\r\n    chooseRandomNumber = async () => {\r\n        const randomNumber = this.getRandomInActiveNumber();\r\n        if (randomNumber) {\r\n            await this.updateInActiveNumber(randomNumber);\r\n        }\r\n        this.checkGameEnded();\r\n    };\r\n\r\n    beginGameHandler = async () => {\r\n        await this.updateInActiveNumber(this.getRandomInActiveNumber());\r\n        this.beginGameTimerHandler();\r\n    };\r\n\r\n    pauseGameHandler = () => {\r\n        this.endGameTimerHandler(true);\r\n    };\r\n\r\n    resumeGameHandler = async () => {\r\n        await this.beginGameHandler();\r\n    };\r\n\r\n    endGameHandler = () => {\r\n        this.endGameTimerHandler(false, true);\r\n    };\r\n\r\n    resetGameHandler = () => {\r\n        this.endGameHandler();\r\n        this.setDefaultGameNumbers();\r\n    };\r\n\r\n    beginGameTimerHandler = () => {\r\n        const gameTimer = setInterval(() => this.chooseRandomNumber(), GAME_INTERVAL);\r\n        this.setState({ gameStarted: true, gamePaused: false, gameTimer });\r\n    };\r\n\r\n    endGameTimerHandler = (gamePaused = false, gameEnded = false) => {\r\n        clearInterval(this.state.gameTimer);\r\n        this.setState({ gamePaused, gameEnded, gameTimer: null });\r\n    };\r\n\r\n    getGamePositionButton = () => {\r\n        let button = (\r\n            <Button\r\n                clicked={this.beginGameHandler}\r\n                btnType={'Success'} >BEGIN</Button>\r\n        );\r\n        if (this.state.gameStarted) {\r\n            button = (\r\n                <Button\r\n                    clicked={this.pauseGameHandler}\r\n                    btnType={'Danger'} >PAUSE</Button>\r\n            );\r\n        }\r\n        if (this.state.gamePaused) {\r\n            button = (\r\n                <Button\r\n                    clicked={this.resumeGameHandler}\r\n                    btnType={'Success'} >RESUME</Button>\r\n            );\r\n        }\r\n        if (this.state.gameEnded) {\r\n            button = (\r\n                <Button disabled >GAME ENDED</Button>\r\n            );\r\n        }\r\n        return button;\r\n    };\r\n\r\n    getGameControls = () => {\r\n        return (\r\n            <div className='GameControls'>\r\n                {this.getGamePositionButton()}\r\n                <Button\r\n                    disabled={!this.state.gameStarted}\r\n                    clicked={this.resetGameHandler}\r\n                    btnType={'Danger'} >RESET</Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    getCoinPublisher = () => {\r\n        return (\r\n            this.state.coinPublishing\r\n                ? <div className='CoinPublisher'>\r\n                    <CoinPublisher>{this.state.currentNumber}</CoinPublisher>\r\n                  </div>\r\n                : null\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='TambolaGameManager'>\r\n                <h2 className='Header'>\r\n                    Classic Indian Tambola\r\n                </h2>\r\n                {this.getCoinPublisher()}\r\n                {this.getGameControls()}\r\n                <TambolaBoard numbers={this.state.numbers} />\r\n                <h5 className='Footer'>\r\n                    Note: we are sorry, but tickets must be self bought or <a target={\"_blank\"} href={\"https://www.google.co.in/search?q=housie+ticket+generator+online\"}>google.</a>\r\n                </h5>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TambolaGameManager;\r\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport TambolaGameManager from './containers/TambolaGameManager/TambolaGameManager';\n\nclass App extends Component {\n  render() {\n    return (\n        <div className='App'>\n          <TambolaGameManager maxNumbers={90} />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}